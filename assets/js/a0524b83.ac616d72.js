"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[26192],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),f=l(r),m=o,d=f["".concat(c,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8447:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={},i=void 0,p={unversionedId:"features/crypto/prt/prt",id:"features/crypto/prt/prt",title:"prt",description:"Tool to calculate potential returns of a certain coin. It will take the loaded coin and compare with either another coin specified with argument --vs, with a target price specified with argument --price, or with the current N coins with biggest market cap with --top.",source:"@site/content/terminal/features/crypto/prt/prt.md",sourceDirName:"features/crypto/prt",slug:"/features/crypto/prt/",permalink:"/docs/terminal/features/crypto/prt/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/terminal/features/crypto/prt/prt.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"wfpe",permalink:"/docs/terminal/features/crypto/ov/wfpe/"},next:{title:"tools",permalink:"/docs/terminal/features/crypto/tools/"}},c={},l=[],s={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"usage: prt [--vs COIN] [--price NUM] [--top NUM] [--export {csv,json,xlsx}] [-h]\n")),(0,o.kt)("p",null,"Tool to calculate potential returns of a certain coin. It will take the loaded coin and compare with either another coin specified with argument ",(0,o.kt)("inlineCode",{parentName:"p"},"--vs"),", with a target price specified with argument ",(0,o.kt)("inlineCode",{parentName:"p"},"--price"),", or with the current N coins with biggest market cap with ",(0,o.kt)("inlineCode",{parentName:"p"},"--top"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"optional arguments:\n  --vs COIN             Symbol of coin to compare loaded coin with (e.g., BTC)\n  -p NUM --price NUM    Target price to compute potential returns (e.g., 5)\n  -t NUM --top   NUM    Top NUM coins to compare with (e.g., 5)\n  --export {csv,json,xlsx}\n                        Export dataframe data to csv,json,xlsx file (default: )\n  -h, --help            show this help message (default: False)\n")),(0,o.kt)("p",null,"Examples:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"load algo/prt --price 2"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"load algo/prt --vs btc"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"load algo/prt --top 5")))}u.isMDXComponent=!0}}]);