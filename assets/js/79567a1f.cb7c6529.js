"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57682],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(r),f=n,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||a;return r?o.createElement(m,s(s({ref:t},c),{},{components:r})):o.createElement(m,s({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},87264:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const a={},s=void 0,i={unversionedId:"features/portfolio/bro/coinbase/deposits/deposits",id:"features/portfolio/bro/coinbase/deposits/deposits",title:"deposits",description:"Display a list of deposits for your account.",source:"@site/content/terminal/features/portfolio/bro/coinbase/deposits/deposits.md",sourceDirName:"features/portfolio/bro/coinbase/deposits",slug:"/features/portfolio/bro/coinbase/deposits/",permalink:"/terminal/features/portfolio/bro/coinbase/deposits/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/terminal/features/portfolio/bro/coinbase/deposits/deposits.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"account",permalink:"/terminal/features/portfolio/bro/coinbase/account/"},next:{title:"history",permalink:"/terminal/features/portfolio/bro/coinbase/history/"}},p={},l=[],c={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"usage: deposits [-t {internal_deposit,deposit}] [-l LIMIT] [-s {created_at,amount}] [--descend]\n                [--export {csv,json,xlsx}] [-h]\n")),(0,n.kt)("p",null,"Display a list of deposits for your account."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"optional arguments:\n  -t {internal_deposit,deposit}, --type {internal_deposit,deposit}\n                        Deposit type. Either: internal_deposits (transfer between portfolios) or deposit\n                        (default: deposit)\n  -l LIMIT, --limit LIMIT\n                        Limit parameter. (default: 20)\n  -s {created_at,amount}, --sort {created_at,amount}\n                        Sort by given column. Default: created_at (default: created_at)\n  --descend             Flag to sort in descending order (lowest first) (default: False)\n  --export {csv,json,xlsx}\n                        Export dataframe data to csv,json,xlsx file (default: )\n  -h, --help            show this help message (default: False)\n")))}u.isMDXComponent=!0}}]);